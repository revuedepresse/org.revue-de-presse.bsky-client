{
  "get": {
    "tags": [
      "app.bsky.unspecced"
    ],
    "summary": "Backend Posts search, returns only skeleton",
    "operationId": "app.bsky.unspecced.searchPostsSkeleton",
    "security": [
      {
        "Bearer": []
      }
    ],
    "parameters": [
      {
        "name": "q",
        "in": "query",
        "description": "Search query string; syntax, phrase, boolean, and faceting is unspecified, but Lucene query syntax is recommended.",
        "required": true,
        "schema": {
          "type": "string",
          "description": "Search query string; syntax, phrase, boolean, and faceting is unspecified, but Lucene query syntax is recommended."
        }
      },
      {
        "name": "sort",
        "in": "query",
        "description": "Specifies the ranking order of results.",
        "required": false,
        "schema": {
          "type": "string",
          "description": "Specifies the ranking order of results.",
          "default": "latest",
          "enum": [
            "top",
            "latest"
          ]
        }
      },
      {
        "name": "since",
        "in": "query",
        "description": "Filter results for posts after the indicated datetime (inclusive). Expected to use 'sortAt' timestamp, which may not match 'createdAt'. Can be a datetime, or just an ISO date (YYYY-MM-DD).",
        "required": false,
        "schema": {
          "type": "string",
          "description": "Filter results for posts after the indicated datetime (inclusive). Expected to use 'sortAt' timestamp, which may not match 'createdAt'. Can be a datetime, or just an ISO date (YYYY-MM-DD)."
        }
      },
      {
        "name": "until",
        "in": "query",
        "description": "Filter results for posts before the indicated datetime (not inclusive). Expected to use 'sortAt' timestamp, which may not match 'createdAt'. Can be a datetime, or just an ISO date (YYY-MM-DD).",
        "required": false,
        "schema": {
          "type": "string",
          "description": "Filter results for posts before the indicated datetime (not inclusive). Expected to use 'sortAt' timestamp, which may not match 'createdAt'. Can be a datetime, or just an ISO date (YYY-MM-DD)."
        }
      },
      {
        "name": "mentions",
        "in": "query",
        "description": "Filter to posts which mention the given account. Handles are resolved to DID before query-time. Only matches rich-text facet mentions.",
        "required": false,
        "schema": {
          "type": "string",
          "description": "Filter to posts which mention the given account. Handles are resolved to DID before query-time. Only matches rich-text facet mentions.",
          "format": "at-identifier"
        }
      },
      {
        "name": "author",
        "in": "query",
        "description": "Filter to posts by the given account. Handles are resolved to DID before query-time.",
        "required": false,
        "schema": {
          "type": "string",
          "description": "Filter to posts by the given account. Handles are resolved to DID before query-time.",
          "format": "at-identifier"
        }
      },
      {
        "name": "lang",
        "in": "query",
        "description": "Filter to posts in the given language. Expected to be based on post language field, though server may override language detection.",
        "required": false,
        "schema": {
          "type": "string",
          "description": "Filter to posts in the given language. Expected to be based on post language field, though server may override language detection.",
          "format": "language"
        }
      },
      {
        "name": "domain",
        "in": "query",
        "description": "Filter to posts with URLs (facet links or embeds) linking to the given domain (hostname). Server may apply hostname normalization.",
        "required": false,
        "schema": {
          "type": "string",
          "description": "Filter to posts with URLs (facet links or embeds) linking to the given domain (hostname). Server may apply hostname normalization."
        }
      },
      {
        "name": "url",
        "in": "query",
        "description": "Filter to posts with links (facet links or embeds) pointing to this URL. Server may apply URL normalization or fuzzy matching.",
        "required": false,
        "schema": {
          "type": "string",
          "description": "Filter to posts with links (facet links or embeds) pointing to this URL. Server may apply URL normalization or fuzzy matching.",
          "format": "uri"
        }
      },
      {
        "name": "tag",
        "in": "query",
        "description": "Filter to posts with the given tag (hashtag), based on rich-text facet or tag field. Do not include the hash (#) prefix. Multiple tags can be specified, with 'AND' matching.",
        "required": false,
        "schema": {
          "type": "array",
          "items": {
            "type": "string",
            "maxLength": 640
          }
        }
      },
      {
        "name": "viewer",
        "in": "query",
        "description": "DID of the account making the request (not included for public/unauthenticated queries). Used for 'from:me' queries.",
        "required": false,
        "schema": {
          "type": "string",
          "description": "DID of the account making the request (not included for public/unauthenticated queries). Used for 'from:me' queries.",
          "format": "did"
        }
      },
      {
        "name": "limit",
        "in": "query",
        "required": false,
        "schema": {
          "type": "integer",
          "minimum": 1,
          "maximum": 100,
          "default": 25
        }
      },
      {
        "name": "cursor",
        "in": "query",
        "description": "Optional pagination mechanism; may not necessarily allow scrolling through entire result set.",
        "required": false,
        "schema": {
          "type": "string",
          "description": "Optional pagination mechanism; may not necessarily allow scrolling through entire result set."
        }
      }
    ],
    "responses": {
      "200": {
        "description": "OK",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "posts"
              ],
              "properties": {
                "cursor": {
                  "type": "string"
                },
                "hitsTotal": {
                  "type": "integer"
                },
                "posts": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/app.bsky.unspecced.defs.skeletonSearchPost"
                  }
                }
              }
            }
          }
        }
      },
      "400": {
        "description": "Bad Request",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "error",
                "message"
              ],
              "properties": {
                "error": {
                  "type": "string",
                  "oneOf": [
                    {
                      "const": "InvalidRequest"
                    },
                    {
                      "const": "ExpiredToken"
                    },
                    {
                      "const": "InvalidToken"
                    },
                    {
                      "const": "BadQueryString"
                    }
                  ]
                },
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "401": {
        "description": "Unauthorized",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "error",
                "message"
              ],
              "properties": {
                "error": {
                  "const": "AuthMissing"
                },
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  }
}
