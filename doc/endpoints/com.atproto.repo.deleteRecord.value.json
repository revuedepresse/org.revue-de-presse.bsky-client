{
  "post": {
    "tags": [
      "com.atproto.repo"
    ],
    "summary": "Delete a repository record, or ensure it doesn't exist. Requires auth, implemented by PDS.",
    "operationId": "com.atproto.repo.deleteRecord",
    "security": [
      {
        "Bearer": []
      }
    ],
    "requestBody": {
      "required": true,
      "content": {
        "application/json": {
          "schema": {
            "type": "object",
            "required": [
              "repo",
              "collection",
              "rkey"
            ],
            "properties": {
              "repo": {
                "type": "string",
                "description": "The handle or DID of the repo (aka, current account).",
                "format": "at-identifier"
              },
              "collection": {
                "type": "string",
                "description": "The NSID of the record collection.",
                "format": "nsid"
              },
              "rkey": {
                "type": "string",
                "description": "The Record Key."
              },
              "swapRecord": {
                "type": "string",
                "description": "Compare and swap with the previous record by CID.",
                "format": "cid"
              },
              "swapCommit": {
                "type": "string",
                "description": "Compare and swap with the previous commit by CID.",
                "format": "cid"
              }
            }
          }
        }
      }
    },
    "responses": {
      "200": {
        "description": "OK",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "commit": {
                  "$ref": "#/components/schemas/com.atproto.repo.defs.commitMeta"
                }
              }
            }
          }
        }
      },
      "400": {
        "description": "Bad Request",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "error",
                "message"
              ],
              "properties": {
                "error": {
                  "type": "string",
                  "oneOf": [
                    {
                      "const": "InvalidRequest"
                    },
                    {
                      "const": "ExpiredToken"
                    },
                    {
                      "const": "InvalidToken"
                    },
                    {
                      "const": "InvalidSwap"
                    }
                  ]
                },
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "401": {
        "description": "Unauthorized",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "error",
                "message"
              ],
              "properties": {
                "error": {
                  "const": "AuthMissing"
                },
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  }
}
